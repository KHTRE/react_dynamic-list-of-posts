{"version":3,"sources":["components/PostsList/PostsList.tsx","components/NewCommentForm/NewCommentForm.tsx","api/api.ts","api/posts.ts","api/comments.ts","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","props","postsList","setSelectedPostId","selectedPostId","handleOpenPost","event","currentTarget","name","className","map","post","userId","title","type","classNames","id","String","onClick","NewCommentForm","postId","updateComments","useState","nameForComment","setNameForComment","emailForComment","setEmailForComment","bodyForComment","setBodyForComment","postComment","a","data","email","body","fetch","method","headers","JSON","stringify","response","json","handleAddComment","preventDefault","onSubmit","placeholder","value","onChange","target","BASE_URL","getUserPosts","url","getPostDetails","getPostComments","PostDetails","setPost","comments","setComments","commentsVisible","setCommentsVisible","getPostDetailsFromServer","postDetailsFromServer","getCommentsFromServer","commentsFromServer","useEffect","toggleComments","deleteComment","length","comment","App","posts","setPosts","selectedUserId","setSelectedUserId","getPostsFromServer","postsFromServer","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"iWAYaA,EAA6B,SAACC,GACzC,IAAQC,EAAiDD,EAAjDC,UAAWC,EAAsCF,EAAtCE,kBAAmBC,EAAmBH,EAAnBG,eAEhCC,EAAiB,SAACC,GACtBH,GAAmBG,EAAMC,cAAcC,OAGzC,OACE,sBAAKC,UAAU,YAAf,UACE,wCAEA,oBAAIA,UAAU,kBAAd,SACGP,EAAUQ,KAAI,SAAAC,GAAI,OACjB,qBAAIF,UAAU,kBAAd,UACE,gCACE,6CAAcE,EAAKC,OAAnB,SACCD,EAAKE,SAER,wBACEC,KAAK,SACLL,UAAWM,IACT,oBACA,SACA,CAAE,4BAA6BX,IAAmBO,EAAKK,KAEzDR,KAAMS,OAAON,EAAKK,IAClBE,QAASb,EARX,oBALmCM,EAAKK,aCfvCG,G,MAAkC,SAAClB,GAC9C,IAAQmB,EAA2BnB,EAA3BmB,OAAQC,EAAmBpB,EAAnBoB,eAChB,EAA4CC,mBAAiB,IAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA8CF,mBAAiB,IAA/D,mBAAOG,EAAP,KAAwBC,EAAxB,KACA,EAA4CJ,mBAAiB,IAA7D,mBAAOK,EAAP,KAAuBC,EAAvB,KAcMC,EAAW,uCAAG,8BAAAC,EAAA,6DACZC,EAAO,CACXX,SACAZ,KAAMe,EACNS,MAAOP,EACPQ,KAAMN,GAEI,6CAPM,SAQKO,MADX,6CACsB,CAChCC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBH,KAAMI,KAAKC,UAAUP,KAbL,cAQZQ,EARY,yBAgBXA,EAASC,QAhBE,2CAAH,qDAmBXC,EAAgB,uCAAG,WAAOnC,GAAP,SAAAwB,EAAA,6DACvBxB,EAAMoC,iBADiB,SAEjBb,IAFiB,OAGvBL,EAAkB,IAClBE,EAAmB,IACnBE,EAAkB,IAClBP,IANuB,2CAAH,sDAStB,OACE,uBAAMZ,UAAU,iBAAiBkC,SAAUF,EAA3C,UACE,qBAAKhC,UAAU,aAAf,SACE,uBACEK,KAAK,OACLN,KAAK,OACLoC,YAAY,YACZnC,UAAU,wBACVoC,MAAOtB,EACPuB,SAjDgB,SAACxC,GACvBkB,EAAkBlB,EAAMyC,OAAOF,YAoD7B,qBAAKpC,UAAU,aAAf,SACE,uBACEK,KAAK,OACLN,KAAK,QACLoC,YAAY,aACZnC,UAAU,wBACVoC,MAAOpB,EACPqB,SAxDiB,SAACxC,GACxBoB,EAAmBpB,EAAMyC,OAAOF,YA2D9B,qBAAKpC,UAAU,aAAf,SACE,0BACED,KAAK,OACLoC,YAAY,oBACZnC,UAAU,wBACVoC,MAAOlB,EACPmB,SA9DgB,SAACxC,GACvBsB,EAAkBtB,EAAMyC,OAAOF,YAiE7B,wBACE/B,KAAK,SACLL,UAAU,uCAFZ,gCC1FOuC,G,MAAW,qCCEXC,EAAY,uCAAG,4CAAAnB,EAAA,6DAAOlB,EAAP,+BAAgB,EACtCsC,EADsB,UACbF,EADa,UAGX,IAAXpC,IACFsC,EAAG,UAAMF,EAAN,yBAA+BpC,IAJV,SAOHsB,MAAMgB,GAPH,cAOpBX,EAPoB,yBASnBA,EAASC,QATU,2CAAH,qDAYZW,EAAc,uCAAG,WAAO/B,GAAP,iBAAAU,EAAA,6DACtBoB,EADsB,UACbF,EADa,kBACK5B,GADL,SAELc,MAAMgB,GAFD,cAEtBX,EAFsB,yBAIrBA,EAASC,QAJY,2CAAH,sDCZdY,EAAe,uCAAG,WAAOhC,GAAP,iBAAAU,EAAA,6DACvBoB,EADuB,UACdF,EADc,4BACc5B,GADd,SAENc,MAAMgB,GAFA,cAEvBX,EAFuB,yBAItBA,EAASC,QAJa,2CAAH,sDCQfa,EAA+B,SAACpD,GAC3C,IAAQG,EAAmBH,EAAnBG,eACR,EAAwBkB,qBAAxB,mBAAOX,EAAP,KAAa2C,EAAb,KACA,EAAgChC,qBAAhC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACA,EAA8ClC,oBAAkB,GAAhE,mBAAOmC,EAAP,KAAwBC,EAAxB,KAEMC,EAAwB,uCAAG,4BAAA7B,EAAA,sEACKqB,EAAe/C,GADpB,OACzBwD,EADyB,OAG/BN,EAAQM,GAHuB,2CAAH,qDAMxBC,EAAqB,uCAAG,4BAAA/B,EAAA,sEACKsB,EAAgBhD,GADrB,OACtB0D,EADsB,OAG5BN,EAAYM,GAHgB,2CAAH,qDAM3BC,qBAAU,WACRJ,IACAE,MACC,CAACzD,IAEJ,IAAM4D,EAAiB,WACrBN,GAAoBD,IAuBhBQ,EAAa,uCAAG,WAAO3D,GAAP,iBAAAwB,EAAA,6DACdoB,EADc,qDACsC5C,EAAMC,cAAcC,MAD1D,SAEG0B,MAAMgB,EAAK,CAChCf,OAAQ,SACRC,QAAS,CACP,eAAgB,sBALA,cAEdG,EAFc,OASpBsB,IAToB,kBAWbtB,EAASC,QAXI,2CAAH,sDAcnB,OACE,sBAAK/B,UAAU,cAAf,UACE,+CACoB,IAAnBL,EACC,qCACE,yBAASK,UAAU,oBAAnB,SACE,4BAAIE,GAAQA,EAAKE,UAGnB,0BAASJ,UAAU,wBAAnB,UA1CF8C,GAAYA,EAASW,OAAS,EAE9B,wBACEpD,KAAK,SACLL,UAAU,SACVS,QAAS8C,EAHX,SAKIP,EAAD,eAEWF,EAASW,OAFpB,4BACWX,EAASW,OADpB,eAQL,qDA8BM,oBAAIzD,UAAU,oBAAd,SACG8C,GAAYE,GAAmBF,EAAS7C,KAAI,SAAAyD,GAAO,OAClD,qBAAI1D,UAAU,yBAAd,UACE,wBACEK,KAAK,SACLL,UAAU,oCACVD,KAAMS,OAAOkD,EAAQnD,IACrBE,QAAS+C,EAJX,eAQA,4BAAIE,EAAQlC,SAT8BkC,EAAQnD,YAe1D,kCACE,qBAAKP,UAAU,4BAAf,SACE,cAAC,EAAD,CAAgBW,OAAQhB,EAAgBiB,eAAgBwC,WAK9D,2EClCOO,EAlEO,WACpB,MAA0B9C,mBAAsB,IAAhD,mBAAO+C,EAAP,KAAcC,EAAd,KACA,EAA4ChD,mBAAiB,GAA7D,mBAAOiD,EAAP,KAAuBC,EAAvB,KACA,EAA4ClD,mBAAiB,GAA7D,mBAAOlB,EAAP,KAAuBD,EAAvB,KAEMsE,EAAkB,uCAAG,4BAAA3C,EAAA,sEACKmB,EAAasB,GADlB,OACnBG,EADmB,OAGzBJ,EAASI,GAHgB,2CAAH,qDAMxBX,qBAAU,WACRU,MACC,CAACF,IAUJ,OACE,sBAAK9D,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wBAAOkE,QAAQ,SAAf,gCAEE,yBACElE,UAAU,qBACVO,GAAG,SACH6B,MAAO0B,EACPzB,SAjBe,SAACxC,IACnBA,EAAMyC,OAAOF,QAAU0B,GAC1BC,GAAmBlE,EAAMyC,OAAOF,OAGlC1C,EAAkB,IAQZ,UAME,wBAAQ0C,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,sCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,KAAd,mCAKN,uBAAMpC,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEP,UAAWmE,EACXlE,kBAAmBA,EACnBC,eAAgBA,MAIpB,qBAAKK,UAAU,eAAf,SACE,cAAC,EAAD,CAAaL,eAAgBA,aC9DvCwE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ad4a5b65.chunk.js","sourcesContent":["import React from 'react';\nimport './PostsList.scss';\nimport classNames from 'classnames';\n\ntype SetSelectedPostId = (postId: number) => void;\n\ntype Props = {\n  postsList: Post[];\n  selectedPostId: number;\n  setSelectedPostId: SetSelectedPostId;\n};\n\nexport const PostsList: React.FC<Props> = (props) => {\n  const { postsList, setSelectedPostId, selectedPostId } = props;\n\n  const handleOpenPost = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setSelectedPostId(+event.currentTarget.name);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {postsList.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              className={classNames(\n                'PostsList__button',\n                'button',\n                { 'PostsList__button--opened': selectedPostId === post.id },\n              )}\n              name={String(post.id)}\n              onClick={handleOpenPost}\n            >\n              Open\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\ntype UpdateComments = () => void;\n\ntype Props = {\n  postId: number;\n  updateComments: UpdateComments;\n};\n\nexport const NewCommentForm: React.FC<Props> = (props) => {\n  const { postId, updateComments } = props;\n  const [nameForComment, setNameForComment] = useState<string>('');\n  const [emailForComment, setEmailForComment] = useState<string>('');\n  const [bodyForComment, setBodyForComment] = useState<string>('');\n\n  const handleNameInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNameForComment(event.target.value);\n  };\n\n  const handleEmailInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmailForComment(event.target.value);\n  };\n\n  const handleBodyInput = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setBodyForComment(event.target.value);\n  };\n\n  const postComment = async () => {\n    const data = {\n      postId,\n      name: nameForComment,\n      email: emailForComment,\n      body: bodyForComment,\n    };\n    const url = 'https://mate.academy/students-api/comments';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n\n    return response.json();\n  };\n\n  const handleAddComment = async (event: React.FormEvent) => {\n    event.preventDefault();\n    await postComment();\n    setNameForComment('');\n    setEmailForComment('');\n    setBodyForComment('');\n    updateComments();\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleAddComment}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={nameForComment}\n          onChange={handleNameInput}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={emailForComment}\n          onChange={handleEmailInput}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={bodyForComment}\n          onChange={handleBodyInput}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async (userId = 0) => {\n  let url = `${BASE_URL}/posts`;\n\n  if (userId !== 0) {\n    url = `${BASE_URL}/posts?userId=${userId}`;\n  }\n\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getPostDetails = async (postId: number) => {\n  const url = `${BASE_URL}/posts/${postId}`;\n  const response = await fetch(url);\n\n  return response.json();\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = async (postId: number) => {\n  const url = `${BASE_URL}/comments?postId=${postId}`;\n  const response = await fetch(url);\n\n  return response.json();\n};\n","import React, { useState, useEffect } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments } from '../../api/comments';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = (props) => {\n  const { selectedPostId } = props;\n  const [post, setPost] = useState<Post>();\n  const [comments, setComments] = useState<Comment[]>();\n  const [commentsVisible, setCommentsVisible] = useState<boolean>(false);\n\n  const getPostDetailsFromServer = async () => {\n    const postDetailsFromServer = await getPostDetails(selectedPostId);\n\n    setPost(postDetailsFromServer);\n  };\n\n  const getCommentsFromServer = async () => {\n    const commentsFromServer = await getPostComments(selectedPostId);\n\n    setComments(commentsFromServer);\n  };\n\n  useEffect(() => {\n    getPostDetailsFromServer();\n    getCommentsFromServer();\n  }, [selectedPostId]);\n\n  const toggleComments = () => {\n    setCommentsVisible(!commentsVisible);\n  };\n\n  const getCommentsButton = () => {\n    if (comments && comments.length > 0) {\n      return (\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={toggleComments}\n        >\n          {!commentsVisible\n            ? `Show ${comments.length} comments`\n            : `Hide ${comments.length} comments`}\n        </button>\n      );\n    }\n\n    return (\n      <span>No comments found</span>\n    );\n  };\n\n  const deleteComment = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    const url = `https://mate.academy/students-api/comments/${event.currentTarget.name}`;\n    const response = await fetch(url, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    getCommentsFromServer();\n\n    return response.json();\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      {selectedPostId !== 0 ? (\n        <>\n          <section className=\"PostDetails__post\">\n            <p>{post && post.title}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            {getCommentsButton()}\n\n            <ul className=\"PostDetails__list\">\n              {comments && commentsVisible && comments.map(comment => (\n                <li className=\"PostDetails__list-item\" key={comment.id}>\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    name={String(comment.id)}\n                    onClick={deleteComment}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm postId={selectedPostId} updateComments={getCommentsFromServer} />\n            </div>\n          </section>\n        </>\n      ) : (\n        <span>Please select a post to see details</span>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/posts';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[] | []>([]);\n  const [selectedUserId, setSelectedUserId] = useState<number>(0);\n  const [selectedPostId, setSelectedPostId] = useState<number>(0);\n\n  const getPostsFromServer = async () => {\n    const postsFromServer = await getUserPosts(selectedUserId);\n\n    setPosts(postsFromServer);\n  };\n\n  useEffect(() => {\n    getPostsFromServer();\n  }, [selectedUserId]);\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    if (+event.target.value !== selectedUserId) {\n      setSelectedUserId(+event.target.value);\n    }\n\n    setSelectedPostId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"select\">\n          Select a user: &nbsp;\n          <select\n            className=\"App__user-selector\"\n            id=\"select\"\n            value={selectedUserId}\n            onChange={handleUserSelect}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            postsList={posts}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails selectedPostId={selectedPostId} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}